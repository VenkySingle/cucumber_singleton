<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="29051" started-at="2023-06-11T13:15:00Z" finished-at="2023-06-11T13:15:29Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.cucumberrun.Tc1@3a5ed7a6]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.cucumberrun.Tc2@6325a3ee]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="29051" started-at="2023-06-11T13:15:00Z" finished-at="2023-06-11T13:15:29Z">
      <class name="com.runner.cucumberrun.Tc1">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.runner.cucumberrun.Tc1@3a5ed7a6]" name="setUpClass" is-config="true" duration-ms="552" started-at="2023-06-11T18:45:00Z" finished-at="2023-06-11T18:45:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.cucumberrun.Tc1@3a5ed7a6]" name="runScenario" duration-ms="14910" started-at="2023-06-11T18:45:01Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-11T18:45:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login into Valid Username and Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login into application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.cucumberrun.Tc1@3a5ed7a6]" name="runScenario" duration-ms="3728" started-at="2023-06-11T18:45:16Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-11T18:45:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login into invalid Username and Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login into application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.cucumberrun.Tc1@3a5ed7a6]" name="runScenario" duration-ms="3751" started-at="2023-06-11T18:45:20Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-11T18:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login into invalid Username and Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login into application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.runner.cucumberrun.Tc1@3a5ed7a6]" name="tearDownClass" is-config="true" duration-ms="62" started-at="2023-06-11T18:45:23Z" finished-at="2023-06-11T18:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.runner.cucumberrun.Tc1 -->
      <class name="com.runner.cucumberrun.Tc2">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.runner.cucumberrun.Tc2@6325a3ee]" name="setUpClass" is-config="true" duration-ms="30" started-at="2023-06-11T18:45:23Z" finished-at="2023-06-11T18:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.cucumberrun.Tc2@6325a3ee]" name="runScenario" duration-ms="5967" started-at="2023-06-11T18:45:23Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-11T18:45:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["cart check"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login into application and find the cart]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=114.0.5735.110)
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'LAPTOP-1039A2T5', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.110, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\VENKAT~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:59994}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e6589fd5e7a907bb39b45079d760732b
*** Element info: {Using=xpath, value=//h3[contains(text(),'T')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=114.0.5735.110)
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'LAPTOP-1039A2T5', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.110, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\VENKAT~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:59994}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e6589fd5e7a907bb39b45079d760732b
*** Element info: {Using=xpath, value=//h3[contains(text(),'T')]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy20.getText(Unknown Source)
	at com.pageobjects.pages.Workpage.mycartamt(Workpage.java:42)
	at com.stepdef.steps.Work.findThePrice(Work.java:35)
	at âœ½.Find the Price(file:///D:/Automation/cucmberarti/./src/test/Resources/Work.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.runner.cucumberrun.Tc2@6325a3ee]" name="tearDownClass" is-config="true" duration-ms="30" started-at="2023-06-11T18:45:29Z" finished-at="2023-06-11T18:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.runner.cucumberrun.Tc2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
